{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/Driver.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction DriverListComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"a\", 6);\n    i0.ɵɵtext(11, \" Edit \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"td\")(13, \"a\", 7);\n    i0.ɵɵlistener(\"click\", function DriverListComponent_tr_20_Template_a_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.Delete(item_r1.id));\n    });\n    i0.ɵɵtext(14, \" Delete \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1 == null ? null : item_r1.firstName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1 == null ? null : item_r1.lastName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1 == null ? null : item_r1.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1 == null ? null : item_r1.phoneNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/drivers/\", item_r1.id, \"\");\n  }\n}\nexport class DriverListComponent {\n  constructor(driverservice) {\n    this.driverservice = driverservice;\n    this.drivers = [];\n    this.currentIndex = -1;\n    this.title = '';\n    this.driverservice.getAll().subscribe(a => {\n      if (a.isSuccess) {\n        console.log(a);\n        this.drivers = a.result;\n      }\n    });\n  }\n  ngOnInit() {\n    this.retrievedrivers();\n  }\n  retrievedrivers() {\n    this.driverservice.getAll().subscribe(data => {\n      if (data.isSuccess) {\n        this.drivers = data.result;\n      }\n      console.log(data);\n    }, error => {\n      console.log(error);\n    });\n  }\n  refreshList() {\n    this.retrievedrivers();\n    this.currentTutorial = undefined;\n    this.currentIndex = -1;\n  }\n  setActiveTutorial(tutorial, index) {\n    this.currentTutorial = tutorial;\n    this.currentIndex = index;\n  }\n  removeAlldrivers() {\n    this.driverservice.deleteAll().subscribe(response => {\n      console.log(response);\n      this.refreshList();\n    }, error => {\n      console.log(error);\n    });\n  }\n  Delete(id) {\n    this.driverservice.delete(id).subscribe(a => {\n      this.driverservice.getAll().subscribe(a => {\n        if (a.isSuccess) {\n          this.drivers = a.result;\n        }\n      });\n      alert(\"success\");\n    });\n  }\n}\nDriverListComponent.ɵfac = function DriverListComponent_Factory(t) {\n  return new (t || DriverListComponent)(i0.ɵɵdirectiveInject(i1.DriverService));\n};\nDriverListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DriverListComponent,\n  selectors: [[\"app-driver-list\"]],\n  decls: 21,\n  vars: 1,\n  consts: [[1, \"nav-item\"], [\"routerLink\", \"add\", 1, \"nav-link\"], [1, \"table\", \"table-striped\"], [1, \"thead-dark\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-outline-success\", 3, \"routerLink\"], [1, \"btn\", \"btn-outline-danger\", 3, \"click\"]],\n  template: function DriverListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"li\", 0)(1, \"a\", 1);\n      i0.ɵɵtext(2, \"Add New Driver \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\")(4, \"table\", 2)(5, \"thead\", 3)(6, \"tr\")(7, \"th\", 4);\n      i0.ɵɵtext(8, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 4);\n      i0.ɵɵtext(10, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\", 4);\n      i0.ɵɵtext(12, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\", 4);\n      i0.ɵɵtext(14, \"Phone Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Edit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Delete\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"tbody\");\n      i0.ɵɵtemplate(20, DriverListComponent_tr_20_Template, 15, 5, \"tr\", 5);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"ngForOf\", ctx.drivers);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink],\n  styles: [\".list[_ngcontent-%COMP%] {\\n  text-align: left;\\n  max-width: 750px;\\n  margin: auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kcml2ZXItbGlzdC9kcml2ZXItbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxZQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIubGlzdCB7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgbWF4LXdpZHRoOiA3NTBweDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","DriverListComponent","constructor","driverservice","getAll","subscribe","a","isSuccess","console","log","drivers","result","ngOnInit","retrievedrivers","data","error","refreshList","currentTutorial","undefined","currentIndex","setActiveTutorial","tutorial","index","removeAlldrivers","deleteAll","response","Delete","id","delete","alert","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\transflow\\TransfloAssesmentFront\\src\\app\\components\\driver-list\\driver-list.component.html","E:\\transflow\\TransfloAssesmentFront\\src\\app\\components\\driver-list\\driver-list.component.ts"],"sourcesContent":["<li class=\"nav-item\">\r\n  <a routerLink=\"add\" class=\"nav-link\">Add New Driver </a>\r\n</li>\r\n<div>\r\n  <table class=\"table table-striped\">\r\n    <thead class=\"thead-dark\">\r\n      <tr>\r\n        <th scope=\"col\">First Name</th>\r\n        <th scope=\"col\">Last Name</th>\r\n        <th scope=\"col\">Email</th>\r\n        <th scope=\"col\">Phone Number</th>\r\n\r\n        <th>Edit</th>\r\n        <th>Delete</th>\r\n\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let item of drivers\">\r\n        <td>{{item?.firstName}}</td>\r\n        <td>{{item?.lastName}}</td>\r\n        <td>{{item?.email}}</td>\r\n        <td>{{item?.phoneNumber}}</td>\r\n\r\n        <td>  <a class=\"btn btn-outline-success\" routerLink=\"/drivers/{{ item.id }}\">\r\n          Edit\r\n        </a></td>\r\n        <td>  <a class=\"btn btn-outline-danger\"  (click)=\"Delete(item.id)\">\r\n          Delete\r\n        </a></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Driver } from 'src/app/models/Driver';\r\nimport { DriverService } from 'src/app/services/Driver.service';\r\n\r\n@Component({\r\n  selector: 'app-driver-list',\r\n  templateUrl: './driver-list.component.html',\r\n  styleUrls: ['./driver-list.component.scss']\r\n})\r\nexport class DriverListComponent implements OnInit {\r\n\r\n  drivers?: Driver[]=[];\r\n  currentTutorial?: Driver;\r\n  currentIndex = -1;\r\n  title = '';\r\n\r\n  constructor(private driverservice: DriverService) {\r\n     this.driverservice.getAll().subscribe(a=>{\r\n       if(a.isSuccess){      \r\n        console.log(a)\r\n      this.drivers=a.result;\r\n       }\r\n     })\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.retrievedrivers();\r\n  }\r\n\r\n  retrievedrivers(): void {\r\n    this.driverservice.getAll()\r\n      .subscribe(\r\n        data => {\r\n          if(data.isSuccess){\r\n          this.drivers = data.result;\r\n          }\r\n          console.log(data);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  refreshList(): void {\r\n    this.retrievedrivers();\r\n    this.currentTutorial = undefined;\r\n    this.currentIndex = -1;\r\n  }\r\n\r\n  setActiveTutorial(tutorial: Driver, index: number): void {\r\n    this.currentTutorial = tutorial;\r\n    this.currentIndex = index;\r\n  }\r\n\r\n  removeAlldrivers(): void {\r\n    this.driverservice.deleteAll()\r\n      .subscribe(\r\n        response => {\r\n          console.log(response);\r\n          this.refreshList();\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  Delete(id:any){\r\n  this.driverservice.delete(id).subscribe(a=>{\r\n    this.driverservice.getAll().subscribe(a=>{\r\n      if(a.isSuccess){\r\n        this.drivers=a.result;\r\n\r\n      }\r\n    })\r\n    alert(\"success\");\r\n  })\r\n  }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}