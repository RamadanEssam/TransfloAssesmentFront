{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = environment.apiUrl;\nexport class DriverService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(baseUrl);\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}${id}`);\n  }\n  create(data) {\n    return this.http.post(baseUrl, data);\n  }\n  update(id, data) {\n    return this.http.put(`${baseUrl}${id}`, data);\n  }\n  delete(id) {\n    return this.http.delete(`${baseUrl}${id}`);\n  }\n  deleteAll() {\n    return this.http.delete(baseUrl);\n  }\n  findByTitle(title) {\n    return this.http.get(`${baseUrl}?title=${title}`);\n  }\n}\nDriverService.ɵfac = function DriverService_Factory(t) {\n  return new (t || DriverService)(i0.ɵɵinject(i1.HttpClient));\n};\nDriverService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DriverService,\n  factory: DriverService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAKA,SAASA,WAAW,QAAQ,8BAA8B;;;AAG1D,MAAMC,OAAO,GAAGD,WAAW,CAACE,MAAM;AAKlC,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,MAAM;IAEJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAwBN,OAAO,CAAC;EACtD;EAEAM,GAAG,CAACC,EAAO;IACT,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAsB,GAAGN,OAAO,GAAGO,EAAE,EAAE,CAAC;EAC9D;EAEAC,MAAM,CAACC,IAAS;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAACV,OAAO,EAAES,IAAI,CAAC;EACtC;EAEAE,MAAM,CAACJ,EAAO,EAAEE,IAAS;IACvB,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAC,GAAGZ,OAAO,GAAGO,EAAE,EAAE,EAAEE,IAAI,CAAC;EAC/C;EAEAI,MAAM,CAACN,EAAO;IACZ,OAAO,IAAI,CAACH,IAAI,CAACS,MAAM,CAAC,GAAGb,OAAO,GAAGO,EAAE,EAAE,CAAC;EAC5C;EAEAO,SAAS;IACP,OAAO,IAAI,CAACV,IAAI,CAACS,MAAM,CAACb,OAAO,CAAC;EAClC;EAEAe,WAAW,CAACC,KAAU;IACpB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAwB,GAAGN,OAAO,UAAUgB,KAAK,EAAE,CAAC;EAC1E;;AA/BWd,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAe,SAAbf,aAAa;EAAAgB,YAFZ;AAAM","names":["environment","baseUrl","apiUrl","DriverService","constructor","http","getAll","get","id","create","data","post","update","put","delete","deleteAll","findByTitle","title","factory","providedIn"],"sourceRoot":"","sources":["E:\\transflow\\TransfloAssesmentFront\\src\\app\\services\\Driver.service.ts"],"sourcesContent":["\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Driver } from '../models/Driver';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ApiResponse } from '../models/ApiResponse';\r\n\r\nconst baseUrl = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DriverService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll(): Observable<ApiResponse<Driver[]>> {\r\n\r\n    return this.http.get<ApiResponse<Driver[]>>(baseUrl);\r\n  }\r\n\r\n  get(id: any): Observable<ApiResponse<Driver>> {\r\n    return this.http.get<ApiResponse<Driver>>(`${baseUrl}${id}`);\r\n  }\r\n\r\n  create(data: any): Observable<any> {\r\n    return this.http.post(baseUrl, data);\r\n  }\r\n\r\n  update(id: any, data: any): Observable<any> {\r\n    return this.http.put(`${baseUrl}${id}`, data);\r\n  }\r\n\r\n  delete(id: any): Observable<any> {\r\n    return this.http.delete(`${baseUrl}${id}`);\r\n  }\r\n\r\n  deleteAll(): Observable<any> {\r\n    return this.http.delete(baseUrl);\r\n  }\r\n\r\n  findByTitle(title: any): Observable<ApiResponse<Driver[]>> {\r\n    return this.http.get<ApiResponse<Driver[]>>(`${baseUrl}?title=${title}`);\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}